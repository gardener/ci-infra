{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    'customManagers:dockerfileVersions',
    'github>gardener/ci-infra//config/renovate/automerge-with-tide.json5',
    'github>gardener/ci-infra//config/renovate/makefile-versions.json5',
  ],
  labels: [
    'kind/enhancement',
  ],
  postUpdateOptions: [
    'gomodTidy',
  ],
  separateMinorPatch: true,
  flux: {
    managerFilePatterns: [
      '/^clusters/.+\\.yaml$/',
      '/^deploy/.+\\.yaml$/',
    ],
  },
  customManagers: [
    {
      customType: 'regex',
      managerFilePatterns: [
        '/config/prow/cluster/.+/helm/generate-.+-deployments.sh$/',
      ],
      matchStrings: [
        'helm repo add .+ (?<registryUrl>.+?)\\s(.|\\n)*helm template -n .+ .+ .+\\/(?<depName>.+?) --version "(?<currentValue>.*)"\\s',
      ],
      datasourceTemplate: 'helm',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/^config/jobs/.+\\.yaml$/',
      ],
      matchStrings: [
        'image(: |=)(?<depName>.*?):(?<currentValue>.*?)\\s',
      ],
      datasourceTemplate: 'docker',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/^config/images/images\\.yaml$/',
      ],
      matchStrings: [
        '\\s+source:\\s+(?<depName>.+?)\\n\\s+destination:\\s+.*\\n\\s+tags:\\n(\\s+-\\s+v?[0-9][0-9a-zA-Z\\-\\.]*\\n)*\\s+-\\s+(?<currentValue>.+?)\\n',
      ],
      datasourceTemplate: 'docker',
    },
  ],
  packageRules: [
    {
      groupName: 'prow apps',
      matchDatasources: [
        'github-releases',
        'helm',
      ],
      matchPackageNames: [
        '/prometheus-operator/kube-prometheus/',
      ],
      postUpgradeTasks: {
        commands: [
          'make generate-prow-deployments',
        ],
        executionMode: 'branch',
      },
    },
    {
      groupName: 'renovate',
      matchDatasources: [
        'docker',
        'helm',
      ],
      matchPackageNames: [
        'renovate',
        'ghcr.io/renovatebot/renovate',
      ],
      automerge: true,
      schedule: [
        'after 08:30 and before 15:30 every weekday',
      ],
    },
    {
      matchDatasources: [
        'go',
      ],
      matchPackageNames: [
        '/sigs\\.k8s\\.io/prow/',
      ],
      extends: [
        'schedule:monthly',
      ],
    },
    {
      matchDatasources: [
        'go',
      ],
      matchPackageNames: [
        '/k8s\\.io/(api|apimachinery|client-go)/',
        '/sigs\\.k8s\\.io/controller-runtime/',
      ],
      enabled: false,
    },
    {
      matchManagers: [
        'gomod',
      ],
      matchUpdateTypes: [
        'patch',
      ],
      matchPackageNames: [
        '/go/',
      ],
      enabled: false,
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
      ],
      matchPackageNames: [
        '/grafana/grafana/',
      ],
      enabled: false,
    },
    {
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
        'patch',
      ],
      matchFileNames: [
        'config/images/images.yaml',
      ],
      matchPackageNames: [
        '/coredns/coredns/',
        '/calico/node/',
        '/calico/cni/',
        '/calico/typha/',
        '/calico/kube-controllers/',
        '/calico/pod2daemon-flexvol/',
        '/fluent/fluent-bit/',
        '/grafana/grafana/',
        '/grafana/loki/',
        '/grafana/promtail/',
        '/k8scloudprovider/openstack-cloud-controller-manager/',
        '/k8scloudprovider/cinder-csi-plugin/',
        '/kubesphere/fluent-bit/',
        '/kubesphere/fluent-operator/',
        '/nginx/',
      ],
      enabled: false,
    },
    {
      matchFileNames: [
        'config/images/images.yaml',
      ],
      postUpgradeTasks: {
        commands: [
          'go install github.com/mikefarah/yq/v4@latest',
          'bash -c "sed -i `yq \'(.images[] | select(.source == \\"{{{depName}}}\\") | key) as \\$imagePos | (.images[\\$imagePos].tags | length) as \\$tagLength | .images[\\$imagePos].tags[\\$tagLength - 1] | line\' config/images/images.yaml`\'i\\  - {{{currentValue}}}\' config/images/images.yaml"',
        ],
        executionMode: 'update',
      },
    },
  ],
}
