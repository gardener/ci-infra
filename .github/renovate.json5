{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    'customManagers:dockerfileVersions',
    'github>gardener/ci-infra//config/renovate/automerge-with-tide.json5',
    'github>gardener/ci-infra//config/renovate/makefile-versions.json5',
  ],
  labels: [
    'kind/enhancement',
  ],
  postUpdateOptions: [
    'gomodTidy',
  ],
  separateMinorPatch: true,
  flux: {
    managerFilePatterns: [
      '/^clusters/.+\\.yaml$/',
      '/^deploy/.+\\.yaml$/',
    ],
  },
  customManagers: [
    {
      // Generic detection for pod-like and CLI-argument-like image specifications in prow jobs.
      customType: 'regex',
      managerFilePatterns: [
        '/^config/jobs/.+\\.yaml$/',
      ],
      matchStrings: [
        'image(: |=)(?<depName>.*?):(?<currentValue>.*?)\\s',
      ],
      datasourceTemplate: 'docker',
    },
    {
      // Generic detection for container images to be copied.
      customType: 'regex',
      managerFilePatterns: [
        '/^config/images/images\\.yaml$/',
      ],
      matchStrings: [
        '\\s+source:\\s+(?<depName>.+?)\\n\\s+destination:\\s+.*\\n\\s+tags:\\n(\\s+-\\s+v?[0-9a-zA-Z\\-\\.]*[0-9][0-9a-zA-Z\\-\\.]*\\n)*\\s+-\\s+(?<currentValue>.+?)\\n',
      ],
      datasourceTemplate: 'docker',
    },
  ],
  packageRules: [
    {
      groupName: 'renovate',
      matchDatasources: [
        'docker',
        'helm',
      ],
      matchPackageNames: [
        'renovate',
        'ghcr.io/renovatebot/renovate',
      ],
      automerge: true,
      schedule: [
        'after 08:30 and before 15:30 every weekday',
      ],
    },
    {
      // sigs.k8s.io/prow is too noisy because it does not create releases but is referenced by digest.
      matchDatasources: [
        'go',
      ],
      matchPackageNames: [
        '/sigs\\.k8s\\.io/prow/',
      ],
      extends: [
        'schedule:monthly',
      ],
    },
    {
      // Do not update Kubernetes dependencies except sigs.k8s.io/prow.
      // The versions of api, apimachinery, client-go and controller-runtime depend on sigs.k8s.io/prow.
      matchDatasources: [
        'go',
      ],
      matchPackageNames: [
        '/k8s\\.io/(api|apimachinery|client-go)/',
        '/sigs\\.k8s\\.io/controller-runtime/',
      ],
      enabled: false,
    },
    {
      // Do not update patch versions of the Go Toolchain.
      // Default golang images set the environment variable GOTOOLCHAIN=local
      // and we don't want to enforce every (test-)image to be on the latest patch level.
      matchManagers: [
        'gomod',
      ],
      matchUpdateTypes: [
        'patch',
      ],
      matchPackageNames: [
        '/go/',
      ],
      enabled: false,
    },
    // Support distroless versioning scheme for envoy images.
    {
      matchDatasources: [
        'docker',
      ],
      matchPackageNames: [
        'envoyproxy/envoy',
      ],
      matchFileNames: [
        'config/images/images.yaml',
      ],
      versioning: 'regex:^distroless-v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$'
    },
    {
      // Pin certain components to the current version.
      matchDatasources: [
        'docker',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
        'patch',
      ],
      matchFileNames: [
        'config/images/images.yaml',
      ],
      matchPackageNames: [
        '/coredns/coredns/',
        '/calico/node/',
        '/calico/cni/',
        '/calico/typha/',
        '/calico/kube-controllers/',
        '/calico/pod2daemon-flexvol/',
        '/fluent/fluent-bit/',
        '/grafana/grafana/',
        '/grafana/loki/',
        '/grafana/promtail/',
        '/k8scloudprovider/openstack-cloud-controller-manager/',
        '/k8scloudprovider/cinder-csi-plugin/',
        '/kubesphere/fluent-bit/',
        '/kubesphere/fluent-operator/',
        '/nginx/',
      ],
      enabled: false,
    },
    {
      // Add new versions instead of replacing old version to keep a list of all copied versions.
      matchFileNames: [
        'config/images/images.yaml',
      ],
      postUpgradeTasks: {
        commands: [
          'go install github.com/mikefarah/yq/v4@latest',
          'bash -c "sed -i `yq \'(.images[] | select(.source == \\"{{{depName}}}\\") | key) as \\$imagePos | (.images[\\$imagePos].tags | length) as \\$tagLength | .images[\\$imagePos].tags[\\$tagLength - 1] | line\' config/images/images.yaml`\'i\\  - {{{currentValue}}}\' config/images/images.yaml"',
        ],
        executionMode: 'update',
      },
    },
  ],
}
