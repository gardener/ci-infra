version: "2"
run:
  concurrency: 4
linters:
  enable:
    - revive
  disable:
    - unused
  exclusions:
    generated: lax
    rules:
      - linters:
          - staticcheck
        text: 'SA1019:' # Excludes messages where deprecated variables are used
      # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
      - path: (.+)\.go$
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
      # revive:
      - path: (.+)\.go$
        text: var-naming  # ((var|const|struct field|func) .* should be .*
      - path: (.+)\.go$
        text: dot-imports # should not use dot imports
      - path: (.+)\.go$
        text: package-comments  # package comment should be of the form
      - path: (.+)\.go$
        text: unexported-return # exported func .* returns unexported type .*, which can be annoying to use
      - path: (.+)\.go$
        text: indent-error-flow # if block ends with a return statement, so drop this else and outdent its block
      - path: (.+)\.go$
        text: 'exported: (type|func) name will be used as .* by other packages, and that stutters;'
      # typecheck:
      - path: (.+)\.go$
        text: 'undeclared name: `.*`'
      - path: (.+)\.go$
        text: '".*" imported but not used'
    paths:
      - third_party$
      - builtin$
      - examples$
formatters:
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
