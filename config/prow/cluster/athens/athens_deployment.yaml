---
# Source: athens-proxy/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: athens-proxy
  labels:
    
    app: athens-proxy
    chart: athens-proxy-0.14.3
    release: "athens"
    heritage: "Helm"
    app.kubernetes.io/name: athens-proxy
    helm.sh/chart: athens-proxy-0.14.3
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "athens"
    app.kubernetes.io/version: "v0.15.4"
---
# Source: athens-proxy/templates/secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: athens-proxy-secret
  labels:
    
    app: athens-proxy
    chart: athens-proxy-0.14.3
    release: "athens"
    heritage: "Helm"
    app.kubernetes.io/name: athens-proxy
    helm.sh/chart: athens-proxy-0.14.3
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "athens"
    app.kubernetes.io/version: "v0.15.4"
type: Opaque
data:
---
# Source: athens-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: athens-proxy
  annotations:
    service.kubernetes.io/topology-mode: Auto
  labels:
    
    app: athens-proxy
    chart: athens-proxy-0.14.3
    release: "athens"
    heritage: "Helm"
    app.kubernetes.io/name: athens-proxy
    helm.sh/chart: athens-proxy-0.14.3
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "athens"
    app.kubernetes.io/version: "v0.15.4"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  selector:
    app: athens-proxy
    release: "athens"
---
# Source: athens-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: athens-proxy
  labels:
    
    app: athens-proxy
    chart: athens-proxy-0.14.3
    release: "athens"
    heritage: "Helm"
    app.kubernetes.io/name: athens-proxy
    helm.sh/chart: athens-proxy-0.14.3
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/instance: "athens"
    app.kubernetes.io/version: "v0.15.4"
spec:
  replicas: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: athens-proxy
      release: "athens"
  template:
    metadata:
      labels:
        
        app: athens-proxy
        chart: athens-proxy-0.14.3
        release: "athens"
        heritage: "Helm"
        app.kubernetes.io/name: athens-proxy
        helm.sh/chart: athens-proxy-0.14.3
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/instance: "athens"
        app.kubernetes.io/version: "v0.15.4"
      annotations:
        checksum/upstream: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/ssh-config: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/ssh-secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      serviceAccountName: "athens-proxy"
      containers:
      - name: athens-proxy
        image: "docker.io/gomods/athens:v0.15.4"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: "/healthz"
            port: 3000
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: "/readyz"
            port: 3000
        env:
        - name: ATHENS_GOGET_WORKERS
          value: "5"
        - name: ATHENS_GO_BINARY_ENV_VARS
          value: GOPROXY=https://proxy.golang.org,direct
        - name: ATHENS_SINGLE_FLIGHT_TYPE
          value: gcp
        - name: ATHENS_STORAGE_TYPE
          value: "gcp"
        - name: GOOGLE_CLOUD_PROJECT
          value: "gardener-project"
        - name: ATHENS_STORAGE_GCP_BUCKET
          value: "gardener-prow-goproxy"
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 200m
            memory: 32Mi
      volumes:
      - name: storage-volume
        emptyDir: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: worker.gardener.cloud/system-components
                operator: In
                values:
                - "true"
---
# Source: athens-proxy/templates/service-monitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: "athens-proxy"
    app.kubernetes.io/instance: "athens"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "athens-proxy"
    app.kubernetes.io/version: "v0.15.4"
    chart: "athens-proxy-0.14.3"
    helm.sh/chart: "athens-proxy-0.14.3"
    heritage: "Helm"
    release: "athens"
  annotations:
    service.kubernetes.io/topology-mode: Auto
  name: athens-proxy
  namespace: monitoring
spec:
  endpoints:
  - path: /metrics
    port: http
  namespaceSelector:
    matchNames:
    - athens
  selector:
    matchLabels:
      app: athens-proxy
      release: "athens"
---
# Source: athens-proxy/templates/test/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "athens-proxy-test-connection"
  labels:
    app: athens-proxy
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['sh']
      args:
        - '-c'
        - |
          sleep 2;
          wget athens-proxy:80;
          wget -O - athens-proxy:80/github.com/google/uuid/@v/v1.6.0.mod;
  restartPolicy: Never
