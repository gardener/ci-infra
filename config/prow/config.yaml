plank:
  job_url_template: 'https://prow.gardener.cloud/view/gs/gardener-prow/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if .Spec.Refs}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{if and (eq .Spec.Refs.Org "kubernetes-sigs") (ne .Spec.Refs.Repo "poseidon")}}sigs.k8s.io{{else}}{{.Spec.Refs.Org}}{{end}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_templates:
    '*': >-
      [Full PR test history](https://prow.gardener.cloud/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}).
      [Your PR dashboard](https://prow.gardener.cloud/pr?query=is%3Apr%20state%3Aopen%20author%3A{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).
  job_url_prefix_config:
    '*': https://prow.gardener.cloud/view/
  pod_pending_timeout: 15m
  pod_unscheduled_timeout: 5m
  default_decoration_configs:
    '*':
      timeout: 2h
      grace_period: 15m
      utility_images:
        clonerefs: "gcr.io/k8s-prow/clonerefs:v20210928-0afc0f8086"
        initupload: "gcr.io/k8s-prow/initupload:v20210928-0afc0f8086"
        entrypoint: "gcr.io/k8s-prow/entrypoint:v20210928-0afc0f8086"
        sidecar: "gcr.io/k8s-prow/sidecar:v20210928-0afc0f8086"
      gcs_configuration:
        bucket: "gs://gardener-prow"
        path_strategy: explicit
      gcs_credentials_secret: "gardener-prow-storage"
      resources:
        clonerefs:
          requests:
            cpu: 100m
        initupload:
          requests:
            cpu: 100m
        place_entrypoint:
          requests:
            cpu: 100m
        sidecar:
          requests:
            cpu: 100m

sinker:
  resync_period: 1m
  max_prowjob_age: 48h
  max_pod_age: 48h
  terminated_pod_ttl: 30m

deck:
  spyglass:
    size_limit: 100000000 # 100MB
#    gcs_browser_prefix: https://gcsweb.k8s.io/gcs/
#    testgrid_config: gs://k8s-testgrid/config
#    testgrid_root: https://testgrid.k8s.io/
    lenses:
    - lens:
        name: metadata
      required_files:
      - ^(?:started|finished)\.json$
      optional_files:
      - ^(?:podinfo|prowjob)\.json$
    - lens:
        name: buildlog
        config:
          highlight_regexes:
          - timed out
          - "ERROR:"
          - (FAIL|Failure \[)\b
          - panic\b
          - ^E\d{4} \d\d:\d\d:\d\d\.\d\d\d]
          # This highlights the start of bazel tests/runs to skip go importing noise.
          - "^INFO: Analyzed \\d+ targets"
      required_files:
        - ^.*build-log\.txt$
    - lens:
        name: junit
      required_files:
        - ^artifacts(/.*/|/)junit.*\.xml$ # https://regex101.com/r/vCSegS/1
    - lens:
        name: coverage
      required_files:
        - ^artifacts/filtered\.cov$
      optional_files:
        - ^artifacts/filtered\.html$
    - lens:
        name: podinfo
      required_files:
        - ^podinfo\.json$
    - lens:
        name: links
      required_files:
        - artifacts/.*\.link\.txt
  tide_update_period: 1s
  rerun_auth_configs:
    '*':
      github_team_ids:
      - 5415312 # ci-infra-maintainers

prowjob_namespace: prow
pod_namespace: test-pods
log_level: debug

#managed_webhooks:
#  # This has to be true if any of the managed repo/org is using the legacy global token that is manually created.
#  respect_legacy_global_token: true
#  # Config for orgs and repos that have been onboarded to this Prow instance.
#  org_repo_config:
#    bazelbuild/rules_k8s:
#      token_created_after: 2020-06-24T00:10:00Z
#    kubernetes:
#      token_created_after: 2020-08-12T00:00:00Z
#    kubernetes-client:
#      token_created_after: 2020-07-24T00:00:00Z
#    kubernetes-csi:
#      token_created_after: 2020-08-12T00:00:00Z
#    kubernetes-security:
#      token_created_after: 2021-05-19T00:00:00Z
#    kubernetes-sigs:
#      token_created_after: 2020-08-12T00:00:00Z
#    containerd/containerd:
#      token_created_after: 2020-09-17T00:00:00Z
#    cncf/apisnoop:
#      token_created_after: 2020-09-22T00:00:00Z

slack_reporter_configs:
  '*':
    job_types_to_report:
      - postsubmit
      - periodic
      - batch
    job_states_to_report:
      - failure
      - error
    channel: test-failures
    # The template shown below is the default
    report_template: 'Job {{.Spec.Job}} of type {{.Spec.Type}} ended with state {{.Status.State}}. <{{.Status.URL}}|View logs>'

#branch-protection:
#  orgs:
#    kubernetes:
#      protect: true
#      required_status_checks:
#        contexts:
#        - cla/linuxfoundation
#      exclude:
#        - "^revert-" # don't protect revert branches
#        - "^dependabot/" # don't protect branches created by dependabot
#        - "^greenkeeper/" # don't protect branches created by greenkeeper
#      repos:
#        api:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        apiextensions-apiserver:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        apimachinery:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        apiserver:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        autoscaler:
#          required_status_checks:
#            contexts:
#            - test-and-verify
#            - Helm chart
#            - Helm Docs
#          branches:
#            gh-pages:
#              protect: false
#        client-go:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        cli-runtime:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        cloud-provider:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        cloud-provider-aws:
#          branches:
#            gh-pages:
#              protect: false
#        cloud-provider-openstack:
#          branches:
#            gh-pages:
#              protect: false
#        cluster-bootstrap:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        code-generator:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        component-base:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        component-helpers:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        controller-manager:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        cri-api:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        csi-translation-lib:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        dashboard:
#          required_pull_request_reviews:
#            required_approving_review_count: 1
#        dns:
#          required_status_checks:
#            contexts:
#            - continuous-integration/travis-ci
#          required_pull_request_reviews:
#            required_approving_review_count: 1
#        enhancements:
#          restrictions: # only allow admins
#            users: []
#            teams: []
#        git-sync:
#          enforce_admins: true
#          restrictions: # only allow admins
#            users: []
#            teams: []
#        ingress-nginx:
#          branches:
#            gh-pages:
#              protect: false
#        kompose:
#          required_status_checks:
#            contexts:
#            - continuous-integration/travis-ci
#          required_pull_request_reviews:
#            required_approving_review_count: 1
#        kops:
#          required_status_checks:
#            contexts:
#            - build-linux-amd64
#            - build-macos-amd64
#            - build-windows-amd64
#            - verify
#        kubelet:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        kubernetes:
#          restrictions: # only allow admins
#            users: []
#            teams: []
#        kube-aggregator:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        kube-controller-manager:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        kube-proxy:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        kube-state-metrics:
#          required_status_checks:
#            contexts:
#            - ci-benchmark-tests
#            - ci-build-kube-state-metrics
#            - ci-e2e-tests
#            - ci-go-lint
#            - ci-unit-tests
#            - ci-validate-docs
#            - ci-validate-go-modules
#            - ci-validate-manifests
#          branches:
#            gh-pages:
#              protect: false
#        kube-scheduler:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        kubectl:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        legacy-cloud-providers:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        metrics:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        mount-utils:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        node-api:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        noderesourcetopology-api:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        org:
#          restrictions: # only allow admins
#            users: []
#            teams: []
#        pod-security-admission:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        sample-apiserver:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        sample-cli-plugin:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        sample-controller:
#          restrictions:
#            users: []
#            teams:
#            - stage-bots
#        website:
#          protect: false # TODO(fejta): protect all branches soon
#          branches:
#            master:
#              protect: true
#            release-1.4:
#              protect: true
#            release-1.5:
#              protect: true
#            release-1.6:
#              protect: true
#            release-1.7:
#              protect: true
#            release-1.8:
#              protect: true
#            release-1.9:
#              protect: true
#            release-1.10:
#              protect: true
#            release-1.11:
#              protect: true
#            release-1.12:
#              protect: true
#            release-1.13:
#              protect: true
#            release-1.14:
#              protect: true
#            release-1.15:
#              protect: true
#            release-1.16:
#              protect: true
#            release-1.17:
#              protect: true
#            release-1.18:
#              protect: true
#            release-1.19:
#              protect: true
#            release-1.20:
#              protect: true
#            release-1.21:
#              protect: true
#    kubernetes-client:
#      protect: true
#      required_status_checks:
#        contexts:
#        - cla/linuxfoundation
#      exclude:
#        - "^revert-" # don't protect revert branches
#        - "^dependabot/" # don't protect branches created by dependabot
#        - "^greenkeeper/" # don't protect branches created by greenkeeper
#      repos:
#        python:
#          required_status_checks:
#            contexts:
#            - continuous-integration/travis-ci
#        python-base:
#          required_status_checks:
#            contexts:
#            - continuous-integration/travis-ci
#    kubernetes-csi:
#      protect: true
#      required_status_checks:
#        contexts:
#        - cla/linuxfoundation
#      exclude:
#        - "^revert-" # don't protect revert branches
#        - "^dependabot/" # don't protect branches created by dependabot
#        - "^greenkeeper/" # don't protect branches created by greenkeeper
#    kubernetes-sigs:
#      protect: true
#      required_status_checks:
#        contexts:
#        - cla/linuxfoundation
#      exclude:
#        - "^revert-" # don't protect revert branches
#        - "^dependabot/" # don't protect branches created by dependabot
#        - "^greenkeeper/" # don't protect branches created by greenkeeper
#      repos:
#        aws-ebs-csi-driver:
#          branches:
#            gh-pages:
#              protect: false
#        aws-efs-csi-driver:
#          branches:
#            gh-pages:
#              protect: false
#        aws-fsx-csi-driver:
#          branches:
#            gh-pages:
#              protect: false
#        cluster-api-provider-gcp:
#          required_status_checks:
#            contexts:
#            - lint
#        cluster-proportional-autoscaler:
#          branches:
#            gh-pages:
#              protect: false
#        kube-batch:
#          required_status_checks:
#            contexts:
#            - continuous-integration/travis-ci
#        kubespray:
#          required_status_checks:
#            contexts:
#            - Kubespray CI Pipeline
#        nfs-ganesha-server-and-external-provisioner:
#          branches:
#            gh-pages:
#              protect: false
#        nfs-subdir-external-provisioner:
#          branches:
#            gh-pages:
#              protect: false
#        node-feature-discovery:
#          branches:
#            gh-pages:
#              protect: false
#        node-feature-discovery-operator:
#          branches:
#            gh-pages:
#              protect: false
#        secrets-store-csi-driver:
#          branches:
#            gh-pages:
#              protect: false

tide:
  sync_period: 2m
  queries:
  - repos:
    - gardener/ci-infra
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/blocked-paths
    - do-not-merge/contains-merge-commits
    - do-not-merge/hold
    - do-not-merge/invalid-commit-message
    - do-not-merge/invalid-owners-file
    - do-not-merge/release-note-label-needed
    - do-not-merge/work-in-progress
    - needs-rebase

  merge_method:
    gardener/ci-infra: squash
  pr_status_base_urls:
    '*': https://prow.gardener.cloud/pr
  blocker_label: tide/merge-blocker
  squash_label: tide/merge-method-squash
  rebase_label: tide/merge-method-rebase
  merge_label: tide/merge-method-merge
  context_options:
    orgs:
      gardener:
        from-branch-protection: true
  priority:
  - labels: [ "kind/flake", "priority/critical-urgent" ]
  - labels: [ "kind/failing-test", "priority/critical-urgent" ]
  - labels: [ "kind/bug", "priority/critical-urgent" ]

#push_gateway:
#  endpoint: pushgateway
#  serve_metrics: true

github_reporter:
  job_types_to_report:
  - presubmit
  - postsubmit

presets:
# docker-in-docker (with images/bootstrap) preset
# NOTE: using this also requires using that image,
# ensuring you run your test under either the ENTRYPOINT or:
# /usr/local/bin/runner.sh my-test-command --foo --bar
# AND setting the following on your PodSpec:
# securityContext:
#   privileged: true
- labels:
    preset-dind-enabled: "true"
  env:
  - name: DOCKER_IN_DOCKER_ENABLED
    value: "true"
  volumes:
  # kubekins-e2e legacy path
  - name: docker-graph
    emptyDir: {}
  # krte (normal) path
  - name: docker-root
    emptyDir: {}
  volumeMounts:
  - name: docker-graph
    mountPath: /docker-graph
  - name: docker-root
    mountPath: /var/lib/docker
# volume mounts for kind
- labels:
    preset-kind-volume-mounts: "true"
  volumeMounts:
    - mountPath: /lib/modules
      name: modules
      readOnly: true
    - mountPath: /sys/fs/cgroup
      name: cgroup
  volumes:
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
# enable GOPROXY by default
- env:
  - name: GOPROXY
    value: "https://proxy.golang.org"
